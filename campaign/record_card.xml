<?xml version="1.0" encoding="utf-8"?>
<root>
	<windowclass name="card">
		<frame>recordsheet</frame>
		<placement>
			<size width="320" height="457" />
		</placement>
		<minimize>minimized_item</minimize>
		<sharable />
		<tooltip field="name" />
		<script file="common/scripts/record_window.lua" />
		<sheetdata>
			<sub_record_header name="header">
				<class>card_header</class>
			</sub_record_header>

			<frame_record_content name="contentframe" />

			<subwindow_record name="main">
				<class>card_main</class>
				<activate />
				<fastinit />
			</subwindow_record>

			<close_recordsheet />
		</sheetdata>
	</windowclass>

	<windowclass name="card_header">
		<margins control="0,0,0,7" />
		<script file="common/scripts/record_header.lua" />
		<sheetdata>
			<link_record_header name="link" />
			
			<anchor_record_header_right name="rightanchor" />
			<icon_record_locked>
				<script>
					function onInit()
						local node = window.getDatabaseNode();
						local bIsInHand = CardsManager.isCardInHand(node);
						setVisible(not Session.IsHost or bIsInHand);

						-- AND is here so clients don't try to create nodes outside of
						-- their own hand, which could happen if the GM shares a deck with players
						if not Session.IsHost and bIsInHand then
							DB.setValue(node, "locked", "number", 1);
						end
					end
				</script>
			</icon_record_locked>
			<button_record_locked>
				<script>
					function onInit()
						local node = window.getDatabaseNode();
						local bIsInHand = CardsManager.isCardInHand(node);
						setVisible(Session.IsHost and not bIsInHand);

						if super and super.onInit then
							super.onInit();
						end
					end
				</script>
			</button_record_locked>

			<string_record_name name="name" />
		</sheetdata>
	</windowclass>

	<windowclass name="card_main">
		<margins control="0,0,0,2" />
		<script>
			local bPeek = false;
			function onInit()
				local node = getDatabaseNode();
				DB.addHandler(DB.getPath(node, CardsManager.CARD_FACING_PATH), "onUpdate", onFacingChanged)

				onFacingChanged();
			end

			function onClose()
				local node = getDatabaseNode();
				DB.removeHandler(DB.getPath(node, CardsManager.CARD_FACING_PATH), "onUpdate", onFacingChanged)
			end

			function onFacingChanged()
				local bFaceUp = CardsManager.isCardFaceUp(getDatabaseNode()) or bPeek;
				image.setVisible(bFaceUp);
				image.setEnabled(bFaceUp);
				back.setVisible(not bFaceUp);
				back.setEnabled(not bFaceUp);
			end

			function peek()
				bPeek = true;
				onFacingChanged()
			end

			function update()
			end
		</script>
		<sheetdata>			
			<anchor_column name="columnanchor" />
			<token_column name="image">
				<nodrag />
				<script file="common/scripts/onCardDrag.lua" />
				<anchored width="250" height="350" />
				<gmdrag />
			</token_column>
			<token_card_back name="back">
				<nodrag />
				<anchored height="350" width="250">
					<top parent="columnanchor" anchor="bottom" relation="relative" offset="7" />
					<left />
				</anchored>
			</token_card_back>
		</sheetdata>
	</windowclass>
</root>